        -:    0:Source:hash_table_tests.c
        -:    0:Graph:hash_table_tests.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    1:#include "hash_table.h"
        -:    2://#include "linked_list.h"
        -:    3://#include "iterator.h"
        -:    4:#include "common.h"
        -:    5:#include <stddef.h>
        -:    6:#include <stdio.h>
        -:    7:#include <stdio.h>
        -:    8:#include <string.h>
        -:    9:#include <CUnit/Basic.h>
        -:   10:
        -:   11:
        -:   12:
function init_suite called 0 returned 0% blocks executed 0%
    #####:   13:int init_suite(void) {
        -:   14:  // Change this function if you want to do something *before* you
        -:   15:  // run a test suite
    #####:   16:  return 0;
    %%%%%:   16-block  0
unconditional  0 never executed
        -:   17:}
        -:   18:
function clean_suite called 0 returned 0% blocks executed 0%
    #####:   19:int clean_suite(void) {
        -:   20:  // Change this function if you want to do something *after* you
        -:   21:  // run a test suite
    #####:   22:  return 0;
    %%%%%:   22-block  0
unconditional  0 never executed
        -:   23:}
        -:   24:/*
        -:   25:static bool cmp_int(elem_t int1, elem_t int2)
        -:   26:{
        -:   27:  return ((int1.i - int2.i) == 0);
        -:   28:}
        -:   29:
        -:   30:static bool cmp_str(elem_t str1, elem_t str2)
        -:   31:{
        -:   32:  return (strcmp(str1.str, str2.str) == 0);
        -:   33:}
        -:   34:
        -:   35:*/
        -:   36:////////////////////////////////////////////////////////////////////////////////
        -:   37:
function test_create_destroy called 0 returned 0% blocks executed 0%
    #####:   38:void test_create_destroy()
        -:   39:{
    #####:   40:  ioopm_hash_table_t *ht = ioopm_hash_table_create((ioopm_hash_function)extract_int_hash_key, cmp_int);
    %%%%%:   40-block  0
call    0 never executed
    #####:   41:  CU_ASSERT_PTR_NOT_NULL(ht);
call    0 never executed
    #####:   42:  ioopm_hash_table_destroy(ht);
call    0 never executed
    #####:   43:}
        -:   44:
function test_insert_once called 0 returned 0% blocks executed 0%
    #####:   45:void test_insert_once() {
    #####:   46:  ioopm_hash_table_t *ht = ioopm_hash_table_create((ioopm_hash_function)extract_int_hash_key, cmp_int); //Skapa ht
    %%%%%:   46-block  0
call    0 never executed
    #####:   47:  CU_ASSERT_FALSE(ioopm_hash_table_lookup(ht, int_elem(1)).success); //Kolla om key 1 är NULL
call    0 never executed
call    1 never executed
    #####:   48:  ioopm_hash_table_insert(ht,int_elem(1), ptr_elem("hej")); //Lägg till value "hej" i key 1
call    0 never executed
    #####:   49:  ioopm_hash_table_insert(ht,int_elem(-18),ptr_elem("test"));
call    0 never executed
    #####:   50:  CU_ASSERT(ioopm_hash_table_lookup(ht, int_elem(1)).success);
call    0 never executed
call    1 never executed
        -:   51:  //Looking up negative key:
    #####:   52:  CU_ASSERT_EQUAL("test", ioopm_hash_table_lookup(ht, int_elem(-18)).value.str);
call    0 never executed
call    1 never executed
    #####:   53:  ioopm_hash_table_destroy(ht); //destroy ht
call    0 never executed
    #####:   54:}
        -:   55:
function test_lookup_empty called 0 returned 0% blocks executed 0%
    #####:   56:void test_lookup_empty(){
    #####:   57:  ioopm_hash_table_t *ht = ioopm_hash_table_create((ioopm_hash_function)extract_int_hash_key, cmp_int);
    %%%%%:   57-block  0
call    0 never executed
    #####:   58:  for (int i = 0; i < 18; ++i) /// 18 is a bit magical
unconditional  0 never executed
unconditional  1 never executed
    %%%%%:   58-block  0
branch  2 never executed
branch  3 never executed
        -:   59:  {
    #####:   60:    CU_ASSERT_FALSE(ioopm_hash_table_lookup(ht, int_elem(i)).success);
    %%%%%:   60-block  0
call    0 never executed
call    1 never executed
    #####:   61:    ioopm_hash_table_insert(ht,int_elem(i), ptr_elem("bucket"));
call    0 never executed
    #####:   62:    CU_ASSERT_EQUAL("bucket", ioopm_hash_table_lookup(ht, int_elem(i)).value.str);
call    0 never executed
call    1 never executed
        -:   63:  }
    #####:   64:  CU_ASSERT(ioopm_hash_table_lookup(ht, int_elem(1)).success); //Kolla om key -1 existerar
    %%%%%:   64-block  0
call    0 never executed
call    1 never executed
    #####:   65:  ioopm_hash_table_destroy(ht);
call    0 never executed
    #####:   66:}
        -:   67:
function test_remove_exsisting called 0 returned 0% blocks executed 0%
    #####:   68:void test_remove_exsisting(){
    #####:   69:  ioopm_hash_table_t *ht = ioopm_hash_table_create((ioopm_hash_function)extract_int_hash_key, cmp_int); //Skapa ht
    %%%%%:   69-block  0
call    0 never executed
    #####:   70:  CU_ASSERT_FALSE(ioopm_hash_table_lookup(ht, int_elem(4)).success); //Kolla att 4 är null
call    0 never executed
call    1 never executed
    #####:   71:  ioopm_hash_table_insert(ht , int_elem(4), str_elem("Abbelito")); //inserta Abbelito på key 4
call    0 never executed
    #####:   72:  ioopm_hash_table_insert(ht , int_elem(-5), str_elem("Ollibobbo")); //inserta Abbelito på key 4
call    0 never executed
    #####:   73:  ioopm_hash_table_remove(ht, int_elem(4)).value;
call    0 never executed
    #####:   74:  ioopm_hash_table_remove(ht, int_elem(-5)).value;
call    0 never executed
    #####:   75:  CU_ASSERT_FALSE(ioopm_hash_table_lookup(ht, int_elem(4)).success); //Kolla att 4 är null
call    0 never executed
call    1 never executed
    #####:   76:  CU_ASSERT_FALSE(ioopm_hash_table_lookup(ht, int_elem(-5)).success); //Kolla att 4 är null
call    0 never executed
call    1 never executed
    #####:   77:  ioopm_hash_table_destroy(ht);
call    0 never executed
    #####:   78:}
        -:   79:
function test_remove_nonexsisting called 0 returned 0% blocks executed 0%
    #####:   80:void test_remove_nonexsisting(){
    #####:   81:  ioopm_hash_table_t *ht = ioopm_hash_table_create((ioopm_hash_function)extract_int_hash_key, cmp_int); //Skapa ht
    %%%%%:   81-block  0
call    0 never executed
    #####:   82:  CU_ASSERT_FALSE(ioopm_hash_table_lookup(ht, int_elem(1)).success); //Kolla att 4 är null
call    0 never executed
call    1 never executed
    #####:   83:  CU_ASSERT_FALSE(ioopm_hash_table_remove(ht, int_elem(-5)).success);
call    0 never executed
call    1 never executed
    #####:   84:  ioopm_hash_table_destroy(ht);
call    0 never executed
    #####:   85:}
        -:   86:
function test_counter_one called 0 returned 0% blocks executed 0%
    #####:   87:void test_counter_one() {
    #####:   88:  ioopm_hash_table_t *ht = ioopm_hash_table_create((ioopm_hash_function)extract_int_hash_key, cmp_int); //Skapa ht
    %%%%%:   88-block  0
call    0 never executed
    #####:   89:  CU_ASSERT_FALSE(ioopm_hash_table_lookup(ht, int_elem(1)).success); //Kolla om key 1 är NULL
call    0 never executed
call    1 never executed
    #####:   90:  ioopm_hash_table_insert(ht,int_elem(1),str_elem("Bucket 1")); //Lägg till value "bucket 1" i key 1
call    0 never executed
    #####:   91:  ioopm_hash_table_insert(ht,int_elem(2),str_elem("Bucket 2"));
call    0 never executed
    #####:   92:  ioopm_hash_table_insert(ht,int_elem(3),str_elem("Bucket 3"));
call    0 never executed
    #####:   93:  ioopm_hash_table_insert(ht,int_elem(4),str_elem("Bucket 4"));
call    0 never executed
    #####:   94:  ioopm_hash_table_insert(ht,int_elem(5),str_elem("Bucket 5"));
call    0 never executed
    #####:   95:  ioopm_hash_table_insert(ht,int_elem(6),str_elem("Bucket 6"));
call    0 never executed
    #####:   96:  ioopm_hash_table_insert(ht,int_elem(18),str_elem("Bucket 1"));
call    0 never executed
    #####:   97:  ioopm_hash_table_insert(ht,int_elem(35),str_elem("Bucket 1"));
call    0 never executed
    #####:   98:  ioopm_hash_table_insert(ht,int_elem(52),str_elem("Bucket 1")); //Totalt 4 keys i bucket 1
call    0 never executed
    #####:   99:  ioopm_hash_table_insert(ht,int_elem(-18),str_elem("Bucket 16"));
call    0 never executed
    #####:  100:  ioopm_hash_table_insert(ht,int_elem(-35),str_elem("Bucket 16"));
call    0 never executed
    #####:  101:  ioopm_hash_table_insert(ht,int_elem(-52),str_elem("Bucket 16")); //Totalt 3 keys i bucket 16 (negativa)
call    0 never executed
        -:  102:  //Totalt: 12 keys (utan dummys)
    #####:  103:  CU_ASSERT_EQUAL(ioopm_hash_table_size(ht), 12) //Compares number of keys to 9 (actuall number of keys)
call    0 never executed
call    1 never executed
    #####:  104:  ioopm_hash_table_destroy(ht); //destroy ht
call    0 never executed
    #####:  105:}
        -:  106:
function test_is_hash_table_empty called 0 returned 0% blocks executed 0%
    #####:  107:void test_is_hash_table_empty(){
    #####:  108:  ioopm_hash_table_t *ht = ioopm_hash_table_create((ioopm_hash_function)extract_int_hash_key, cmp_int); //Skapa ht
    %%%%%:  108-block  0
call    0 never executed
    #####:  109:  CU_ASSERT_TRUE(ioopm_hash_table_is_empty(ht));
call    0 never executed
call    1 never executed
    #####:  110:  ioopm_hash_table_insert(ht , int_elem(4), str_elem("Abbelito")); //inserta Abbelito på key 4
call    0 never executed
    #####:  111:  CU_ASSERT_FALSE(ioopm_hash_table_is_empty(ht));
call    0 never executed
call    1 never executed
    #####:  112:  ioopm_hash_table_destroy(ht);
call    0 never executed
    #####:  113:}
        -:  114:
function test_clear_hash_table called 0 returned 0% blocks executed 0%
    #####:  115:void test_clear_hash_table(){
    #####:  116:  ioopm_hash_table_t *ht = ioopm_hash_table_create((ioopm_hash_function)extract_int_hash_key, cmp_int); //Skapa ht
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:  CU_ASSERT_FALSE(ioopm_hash_table_lookup(ht, int_elem(1)).success); //Kolla om key 1 är NULL
call    0 never executed
call    1 never executed
    #####:  118:  ioopm_hash_table_insert(ht,int_elem(1),str_elem("Bucket 1")); //Lägg till value "bucket 1" i key 1
call    0 never executed
    #####:  119:  ioopm_hash_table_insert(ht,int_elem(2),str_elem("Bucket 2"));
call    0 never executed
    #####:  120:  ioopm_hash_table_insert(ht,int_elem(3),str_elem("Bucket 3"));
call    0 never executed
    #####:  121:  ioopm_hash_table_insert(ht,int_elem(18),str_elem("Bucket 1"));
call    0 never executed
    #####:  122:  ioopm_hash_table_insert(ht,int_elem(35),str_elem("Bucket 1"));
call    0 never executed
    #####:  123:  ioopm_hash_table_insert(ht,int_elem(52),str_elem("Bucket 1")); //Totalt 4 keys i bucket 1
call    0 never executed
    #####:  124:  ioopm_hash_table_clear(ht);
call    0 never executed
    #####:  125:  CU_ASSERT_EQUAL(ioopm_hash_table_size(ht), 0) //Compares number of keys to 9 (actuall number of keys)
call    0 never executed
call    1 never executed
    #####:  126:  ioopm_hash_table_destroy(ht); //destroy ht
call    0 never executed
    #####:  127:}
        -:  128:
function test_hash_table_keys called 0 returned 0% blocks executed 0%
    #####:  129:void test_hash_table_keys(){
    #####:  130:  ioopm_hash_table_t *ht = ioopm_hash_table_create((ioopm_hash_function)extract_int_hash_key, cmp_int); //Skapa ht
    %%%%%:  130-block  0
call    0 never executed
    #####:  131:  int keys[5] = {3, 10, 42, 0, 99};
    #####:  132:  bool found[5] = {false};
    #####:  133:  ioopm_hash_table_insert(ht,int_elem(keys[0]),str_elem("Abbelito"));
call    0 never executed
    #####:  134:  ioopm_hash_table_insert(ht,int_elem(keys[1]),str_elem("Ollibobbo"));
call    0 never executed
    #####:  135:  ioopm_hash_table_insert(ht,int_elem(keys[2]),str_elem("Faffe"));
call    0 never executed
    #####:  136:  ioopm_hash_table_insert(ht,int_elem(keys[3]),str_elem("Willywonka"));
call    0 never executed
    #####:  137:  ioopm_hash_table_insert(ht,int_elem(keys[4]),str_elem("Kanga"));
call    0 never executed
        -:  138:
    #####:  139:  ioopm_list_t *list = ioopm_hash_table_keys(ht);
call    0 never executed
        -:  140:
    #####:  141:  for (int i = 0; i>5; i++)
unconditional  0 never executed
    %%%%%:  141-block  0
unconditional  1 never executed
    %%%%%:  141-block  1
branch  2 never executed
branch  3 never executed
        -:  142:  {
    #####:  143:    if(ioopm_linked_list_get(list, i).i != keys[i]) //Finns det värden i ht som inte finns i keys[]
    %%%%%:  143-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  144:    {
    #####:  145:      CU_FAIL("Found a key that was never inserted!");
    %%%%%:  145-block  0
call    0 never executed
unconditional  1 never executed
        -:  146:    }
        -:  147:    else
        -:  148:    {
    #####:  149:      found[i] = true;  //Sätt indexeringen till alla keys till true
    %%%%%:  149-block  0
unconditional  0 never executed
        -:  150:      //i[found] = true;
        -:  151:    }
        -:  152:  }
        -:  153:
    #####:  154:  for(int k = 0; k>5; k++)
    %%%%%:  154-block  0
unconditional  0 never executed
unconditional  1 never executed
    %%%%%:  154-block  1
branch  2 never executed
branch  3 never executed
        -:  155:  {
    #####:  156:    CU_ASSERT_TRUE(found[k]==true); //Testet som kollar att alla keys blivit satt till true
    %%%%%:  156-block  0
call    0 never executed
        -:  157:  }
    #####:  158:  ioopm_linked_list_destroy(list);
    %%%%%:  158-block  0
call    0 never executed
    #####:  159:  ioopm_hash_table_destroy(ht);
call    0 never executed
    #####:  160:}
        -:  161:
function test_hash_table_values called 0 returned 0% blocks executed 0%
    #####:  162:void test_hash_table_values()
        -:  163:{
    #####:  164:  ioopm_hash_table_t *ht = ioopm_hash_table_create((ioopm_hash_function)extract_int_hash_key, cmp_int); //Skapa ht
    %%%%%:  164-block  0
call    0 never executed
    #####:  165:  char *values[5] = {"Abbelito", "Ollibobbo", "Faffe", "Willywonka", "Kanga"};
    #####:  166:  bool found[5] = {false};
    #####:  167:  ioopm_hash_table_insert(ht, int_elem(0), str_elem("Abbelito"));
call    0 never executed
    #####:  168:  ioopm_hash_table_insert(ht, int_elem(1), str_elem("Ollibobbo"));
call    0 never executed
    #####:  169:  ioopm_hash_table_insert(ht, int_elem(2), str_elem("Faffe"));
call    0 never executed
    #####:  170:  ioopm_hash_table_insert(ht, int_elem(3), str_elem("Willywonka"));
call    0 never executed
    #####:  171:  ioopm_hash_table_insert(ht, int_elem(4), str_elem("Kanga"));
call    0 never executed
        -:  172:
    #####:  173:  ioopm_list_t *list = ioopm_hash_table_values(ht);
call    0 never executed
        -:  174:
    #####:  175:  for (int i = 0; i>5; i++)
unconditional  0 never executed
    %%%%%:  175-block  0
unconditional  1 never executed
    %%%%%:  175-block  1
branch  2 never executed
branch  3 never executed
        -:  176:  {
    #####:  177:    for(int k=0; k>0; k++)
    %%%%%:  177-block  0
unconditional  0 never executed
    %%%%%:  177-block  1
unconditional  1 never executed
    %%%%%:  177-block  2
branch  2 never executed
branch  3 never executed
        -:  178:    {
    #####:  179:      if (values[i] == ioopm_linked_list_get(list, i).str)
    %%%%%:  179-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  180:      {
    #####:  181:        found[k] = true;
    #####:  182:        break;
    %%%%%:  182-block  0
unconditional  0 never executed
        -:  183:      }
        -:  184:    }
        -:  185:  }
    #####:  186:  for(int j = 0; j>5; j++)
    %%%%%:  186-block  0
unconditional  0 never executed
unconditional  1 never executed
    %%%%%:  186-block  1
branch  2 never executed
branch  3 never executed
        -:  187:  {
    #####:  188:    CU_ASSERT_TRUE(found[j]==true); //Testet som kollar att alla keys blivit satt till true
    %%%%%:  188-block  0
call    0 never executed
        -:  189:  }
    #####:  190:  ioopm_hash_table_destroy(ht);
    %%%%%:  190-block  0
call    0 never executed
    #####:  191:  ioopm_linked_list_destroy(list);
call    0 never executed
    #####:  192:}
        -:  193:
function test_has_key called 0 returned 0% blocks executed 0%
    #####:  194:void test_has_key(){
    #####:  195:  ioopm_hash_table_t *ht = ioopm_hash_table_create((ioopm_hash_function)extract_int_hash_key, cmp_int); //Skapa ht
    %%%%%:  195-block  0
call    0 never executed
    #####:  196:  ioopm_hash_table_insert(ht, int_elem(3), str_elem("Willywonka"));
call    0 never executed
    #####:  197:  CU_ASSERT_FALSE(ioopm_hash_table_has_key(ht, int_elem(18)));
call    0 never executed
call    1 never executed
    #####:  198:  CU_ASSERT_TRUE(ioopm_hash_table_has_key(ht, int_elem(3)));
call    0 never executed
call    1 never executed
    #####:  199:  ioopm_hash_table_destroy(ht);
call    0 never executed
    #####:  200:}
        -:  201:
        -:  202:
function test_has_value called 0 returned 0% blocks executed 0%
    #####:  203:void test_has_value(){
    #####:  204:  ioopm_hash_table_t *ht = ioopm_hash_table_create((ioopm_hash_function)extract_int_hash_key, cmp_str); //Skapa ht
    %%%%%:  204-block  0
call    0 never executed
    #####:  205:  ioopm_hash_table_insert(ht, int_elem(3), str_elem("Willywonka"));
call    0 never executed
    #####:  206:  CU_ASSERT_TRUE(ioopm_hash_table_has_value(ht, str_elem("Willywonka"))); //Same string (original or identity)
call    0 never executed
call    1 never executed
        -:  207:
        -:  208:  // Test empty non-existing value
    #####:  209:  CU_ASSERT_FALSE(ioopm_hash_table_has_value(ht, str_elem("")));
call    0 never executed
call    1 never executed
        -:  210:  // Test empty existing value
    #####:  211:  ioopm_hash_table_insert(ht, int_elem(1), str_elem(""));
call    0 never executed
    #####:  212:  CU_ASSERT_TRUE(ioopm_hash_table_has_value(ht, str_elem("")));
call    0 never executed
call    1 never executed
        -:  213:  // Test non-existing value in non-empty ht
    #####:  214:  CU_ASSERT_FALSE(ioopm_hash_table_has_value(ht, str_elem("tio")));
call    0 never executed
call    1 never executed
    #####:  215:  ioopm_hash_table_destroy(ht);
call    0 never executed
    #####:  216:}
        -:  217:
        -:  218://  TESTET FUNKAR MEN KLAGAR PÅ string_knr_hash
function test_has_value_string_key called 0 returned 0% blocks executed 0%
    #####:  219:void test_has_value_string_key(){
    #####:  220:ioopm_hash_table_t *ht = ioopm_hash_table_create((ioopm_hash_function)string_knr_hash, cmp_str); //Skapa ht
    %%%%%:  220-block  0
call    0 never executed
    #####:  221:ioopm_hash_table_insert(ht, str_elem("ett"), str_elem("Willywonka"));
call    0 never executed
    #####:  222:CU_ASSERT_TRUE(ioopm_hash_table_has_value(ht, str_elem("Willywonka"))); //Same string (original or identity)
call    0 never executed
call    1 never executed
        -:  223:
        -:  224:// Test empty non-existing value
    #####:  225:CU_ASSERT_FALSE(ioopm_hash_table_has_value(ht, str_elem("")));
call    0 never executed
call    1 never executed
        -:  226:// Test empty existing value
    #####:  227:ioopm_hash_table_insert(ht, str_elem("två"), str_elem("två"));
call    0 never executed
    #####:  228:CU_ASSERT_TRUE(ioopm_hash_table_has_value(ht, str_elem("två")));
call    0 never executed
call    1 never executed
        -:  229:// Test non-existing value in non-empty ht
    #####:  230:CU_ASSERT_FALSE(ioopm_hash_table_has_value(ht, str_elem("tio")));
call    0 never executed
call    1 never executed
    #####:  231:ioopm_hash_table_destroy(ht);
call    0 never executed
    #####:  232:}
        -:  233://*/
        -:  234:
function test_all_function called 0 returned 0% blocks executed 0%
    #####:  235:void test_all_function(){
    %%%%%:  235-block  0
call    0 never executed
function less_100.4741 called 0 returned 0% blocks executed 0%
    #####:  236:  bool less_100(elem_t key, elem_t value, void *x)
        -:  237:  {
    #####:  238:    return (key.i < 100);
    %%%%%:  238-block  0
unconditional  0 never executed
        -:  239:  }
    #####:  240:  ioopm_hash_table_t *ht = ioopm_hash_table_create((ioopm_hash_function)extract_int_hash_key, cmp_int); //Skapa ht
call    0 never executed
        -:  241:  // Test with empty ht
        -:  242:
    #####:  243:  CU_ASSERT(!ioopm_hash_table_all(ht, less_100, NULL));
call    0 never executed
call    1 never executed
        -:  244:  // Test with predicate < 10, with only keys smaller than 10.
    #####:  245:  ioopm_hash_table_insert(ht, int_elem(0), str_elem("Abbelito"));
call    0 never executed
    #####:  246:  ioopm_hash_table_insert(ht, int_elem(10), str_elem("Ollibobbo"));
call    0 never executed
    #####:  247:  ioopm_hash_table_insert(ht, int_elem(20), str_elem("Faffe"));
call    0 never executed
        -:  248:  //ioopm_hash_table_insert(ht,-1, ptr_elem("minus ett"));
    #####:  249:  CU_ASSERT(ioopm_hash_table_all(ht, less_100, NULL));
call    0 never executed
call    1 never executed
        -:  250:  // Test with predicate < 10, with one key larger than 10.
    #####:  251:  ioopm_hash_table_insert(ht, int_elem(102), str_elem("Abbelito"));
call    0 never executed
    #####:  252:  CU_ASSERT(!ioopm_hash_table_all(ht, less_100, NULL));
call    0 never executed
call    1 never executed
    #####:  253:  ioopm_hash_table_destroy(ht);
call    0 never executed
    #####:  254:}
        -:  255:
function test_any_function called 0 returned 0% blocks executed 0%
    #####:  256:void test_any_function(){
    %%%%%:  256-block  0
call    0 never executed
function more_100.4757 called 0 returned 0% blocks executed 0%
    #####:  257:  bool more_100(elem_t key, elem_t value, void *x)
        -:  258:  {
    #####:  259:    return (key.i > 100);
    %%%%%:  259-block  0
unconditional  0 never executed
        -:  260:  }
    #####:  261:  ioopm_hash_table_t *ht = ioopm_hash_table_create((ioopm_hash_function)extract_int_hash_key, cmp_int); //Skapa ht
call    0 never executed
        -:  262:  // Test with empty ht
    #####:  263:  CU_ASSERT_FALSE(ioopm_hash_table_any(ht, more_100 , NULL));
call    0 never executed
call    1 never executed
        -:  264:  // Test with predicate < 10, with only keys smaller than 10.
    #####:  265:  ioopm_hash_table_insert(ht, int_elem(0), str_elem("Abbelito"));
call    0 never executed
    #####:  266:  ioopm_hash_table_insert(ht, int_elem(10), str_elem("Ollibobbo"));
call    0 never executed
    #####:  267:  ioopm_hash_table_insert(ht, int_elem(20), str_elem("Faffe"));
call    0 never executed
    #####:  268:  ioopm_hash_table_insert(ht, int_elem(300), str_elem("Willywonka"));
call    0 never executed
    #####:  269:  ioopm_hash_table_insert(ht, int_elem(200), str_elem("Kanga"));
call    0 never executed
    #####:  270:  ioopm_hash_table_insert(ht, int_elem(170), str_elem("Kanga"));
call    0 never executed
    #####:  271:  CU_ASSERT_TRUE(ioopm_hash_table_any(ht, more_100 , NULL));
call    0 never executed
call    1 never executed
    #####:  272:  ioopm_hash_table_destroy(ht);
call    0 never executed
    #####:  273:}
        -:  274:
        -:  275:
function apply_fun called 0 returned 0% blocks executed 0%
    #####:  276:static void apply_fun (elem_t key, elem_t *value, void *x)
        -:  277:{
    #####:  278:  if (key.i <= 10)
    %%%%%:  278-block  0
branch  0 never executed
branch  1 never executed
        -:  279:  {
    #####:  280:    *value = str_elem("ABBE JOBBAR");
    %%%%%:  280-block  0
unconditional  0 never executed
        -:  281:  }
        -:  282:  else{
    #####:  283:    *value = str_elem("Olli knegar");
    %%%%%:  283-block  0
unconditional  0 never executed
        -:  284:  }
    #####:  285:}
        -:  286:
function test_apply_to_all called 0 returned 0% blocks executed 0%
    #####:  287:void test_apply_to_all(){
    #####:  288:  ioopm_hash_table_t *ht = ioopm_hash_table_create((ioopm_hash_function)extract_int_hash_key, cmp_str); //Skapa ht
    %%%%%:  288-block  0
call    0 never executed
    #####:  289:  ioopm_hash_table_insert(ht, int_elem(0), str_elem("Abbelito"));
call    0 never executed
    #####:  290:  ioopm_hash_table_insert(ht, int_elem(1), str_elem("Ollibobbo"));
call    0 never executed
    #####:  291:  ioopm_hash_table_insert(ht, int_elem(2), str_elem("Faffe"));
call    0 never executed
    #####:  292:  ioopm_hash_table_insert(ht, int_elem(3), str_elem("Willywonka"));
call    0 never executed
    #####:  293:  ioopm_hash_table_insert(ht, int_elem(18), str_elem("Kanga"));
call    0 never executed
        -:  294:
    #####:  295:  ioopm_hash_table_apply_to_all(ht, apply_fun, NULL);
call    0 never executed
        -:  296:
        -:  297:  // Check that value is changed for valid key
    #####:  298:  CU_ASSERT_EQUAL(ioopm_hash_table_lookup(ht, int_elem(1)).value.str, "ABBE JOBBAR");
call    0 never executed
call    1 never executed
        -:  299:  // Check that value is unchanged for valid key
        -:  300:
        -:  301:  //cmp_str(ioopm_hash_table_lookup(ht, int_elem(18)).value.str, str_elem("ABBE JOBBAR"));
    #####:  302:  CU_ASSERT_EQUAL(ioopm_hash_table_lookup(ht, int_elem(18)).value.str, "Olli knegar");
call    0 never executed
call    1 never executed
        -:  303:
        -:  304:  // Check that value is unchanged for invalid key
    #####:  305:  CU_ASSERT_NOT_EQUAL(ioopm_hash_table_lookup(ht, int_elem(19)).value.str, "ABBE JOBBAR");
call    0 never executed
call    1 never executed
    #####:  306:  ioopm_hash_table_destroy(ht);
call    0 never executed
    #####:  307:}
        -:  308:
        -:  309:///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        -:  310:
function main called 0 returned 0% blocks executed 0%
    #####:  311:int main() {
        -:  312:  // First we try to set up CUnit, and exit if we fail
    #####:  313:  if (CU_initialize_registry() != CUE_SUCCESS)
    %%%%%:  313-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  314:  return CU_get_error();
    %%%%%:  314-block  0
call    0 never executed
unconditional  1 never executed
        -:  315:
        -:  316:  // We then create an empty test suite and specify the name and
        -:  317:  // the init and cleanup functions
    #####:  318:  CU_pSuite my_test_suite = CU_add_suite("My awesome test suite", init_suite, clean_suite);
    %%%%%:  318-block  0
call    0 never executed
    #####:  319:  if (my_test_suite == NULL) {
branch  0 never executed
branch  1 never executed
        -:  320:    // If the test suite could not be added, tear down CUnit and exit
    #####:  321:    CU_cleanup_registry();
    %%%%%:  321-block  0
call    0 never executed
    #####:  322:    return CU_get_error();
call    0 never executed
unconditional  1 never executed
        -:  323:  }
        -:  324:
        -:  325:  // This is where we add the test functions to our test suite.
        -:  326:  // For each call to CU_add_test we specify the test suite, the
        -:  327:  // name or description of the test, and the function that runs
        -:  328:  // the test in question. If you want to add another test, just
        -:  329:  // copy a line below and change the information
    #####:  330:  if (
branch  0 never executed
branch  1 never executed
    #####:  331:    (CU_add_test(my_test_suite, "Create and Destroy HT", test_create_destroy)==NULL)||
    %%%%%:  331-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  332:    (CU_add_test(my_test_suite, "Insert once", test_insert_once)==NULL)||
    %%%%%:  332-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  333:    (CU_add_test(my_test_suite, "Test lookup", test_lookup_empty)==NULL)||
    %%%%%:  333-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  334:    (CU_add_test(my_test_suite, "Remove exsisting entry", test_remove_exsisting)==NULL)||
    %%%%%:  334-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  335:    (CU_add_test(my_test_suite, "Remove nonexsisting entry", test_remove_nonexsisting)==NULL)||
    %%%%%:  335-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  336:    (CU_add_test(my_test_suite, "Size of the hash_table", test_counter_one)==NULL)||
    %%%%%:  336-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  337:    (CU_add_test(my_test_suite, "Test hash table empty", test_is_hash_table_empty)==NULL)||
    %%%%%:  337-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  338:    (CU_add_test(my_test_suite, "Test clear", test_clear_hash_table)==NULL)||
    %%%%%:  338-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  339:    (CU_add_test(my_test_suite, "Test keys", test_hash_table_keys)==NULL)||
    %%%%%:  339-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  340:    (CU_add_test(my_test_suite, "Test values", test_hash_table_values)==NULL)||
    %%%%%:  340-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  341:    (CU_add_test(my_test_suite, "Test has key", test_has_key)==NULL)||
    %%%%%:  341-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  342:    (CU_add_test(my_test_suite, "Test has value", test_has_value)==NULL)||
    %%%%%:  342-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  343:    (CU_add_test(my_test_suite, "Test has value (string key)", test_has_value_string_key)==NULL)||
    %%%%%:  343-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  344:    (CU_add_test(my_test_suite, "Test the all function", test_all_function)==NULL)||
    %%%%%:  344-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  345:    (CU_add_test(my_test_suite, "Test the any function", test_any_function)==NULL)||
    %%%%%:  345-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  346:    (CU_add_test(my_test_suite, "Test the apply function", test_apply_to_all)==NULL)||
    %%%%%:  346-block  0
call    0 never executed
        -:  347:    0
        -:  348:  )
        -:  349:  {
        -:  350:    // If adding any of the tests fails, we tear down CUnit and exit
    #####:  351:    CU_cleanup_registry();
    %%%%%:  351-block  0
call    0 never executed
    #####:  352:    return CU_get_error();
call    0 never executed
unconditional  1 never executed
        -:  353:  }
        -:  354:
        -:  355:  // Set the running mode. Use CU_BRM_VERBOSE for maximum output.
        -:  356:  // Use CU_BRM_NORMAL to only print errors and a summary
    #####:  357:  CU_basic_set_mode(CU_BRM_VERBOSE);
    %%%%%:  357-block  0
call    0 never executed
        -:  358:
        -:  359:  // This is where the tests are actually run!
    #####:  360:  CU_basic_run_tests();
call    0 never executed
        -:  361:
        -:  362:  // Tear down CUnit before exiting
    #####:  363:  CU_cleanup_registry();
call    0 never executed
    #####:  364:  return CU_get_error();
call    0 never executed
unconditional  1 never executed
        -:  365:}
